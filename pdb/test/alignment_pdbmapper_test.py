#!/usr/bin/python

# Unit tests for PDB mapper pdb_mapper

import unittest
from hpf.hddb.db import Session, Family, Protein, Domain
from hpf.pdb.mapper import AlignmentToPDBMapper

class MBoxMapTest(unittest.TestCase):
    
    def setUp(self, ):
        self.family_id  = 18883
        self.protein_id = 1063014
        self.domain_id  = 1212855

        session = Session()
        self.family = session.query(Family).get(self.family_id)
        self.protein = session.query(Protein).get(self.protein_id)
        self.domain  = session.query(Domain).get(self.domain_id)

        self.pdbmap = AlignmentToPDBMapper(self.family, self.protein, self.domain, debug=True)

    def testAlignmentToPDBMapper(self, ):
        print "Test mapping of certain values"
        #assert self.pdbmap.alignment_pdbseq_map[0] == 1, "Alignment column 0  does not map to pdb seq 1"
        assert self.pdbmap.alignment_pdbseq_map[100] == 46, "Alignment column 100  does not map to pdb seq 46"
        assert self.pdbmap.pdbseq_pdbatom_map[46] == 47, "PDB seq 46 does not map to PDB atom 48"
        assert self.pdbmap.alignment_pdbatom_map[29] == 10, "Alignment column 29 does not map to PDB atom 11"
        assert self.pdbmap.alignment_pdbatom_map[110] == 57, "Alignment column 110 does not map to PDB atom 58"
        print "...Done"

    def testOutOfBounds(self, ):
        print "Test accessing out of map bounds"
        self.assertRaises(KeyError, self._al_seq_oob, )
        self.assertRaises(KeyError, self._al_atom_oob, )
        self.assertRaises(KeyError, self._seq_atom_oob, )
        print "...Done"

    def _al_seq_oob(self, ):
        try:
            self.pdbmap.alignment_pdbseq_map[1000000]
        except:
            raise

    def _al_atom_oob(self, ):
        try: 
            self.pdbmap.alignment_pdbatom_map[1000000] == None
        except:
            raise
        
    def _seq_atom_oob(self, ):
        try:
            self.pdbmap.pdbseq_pdbatom_map[1000000] == None
        except:
            raise

class DomainToPDBTest(unittest.TestCase):
    
    # NOTE: This test case relies on assertion values from alignment generated by the PFP software as of 9/01/2011 (Repo Revision 1565)
    # If alignment functionality changes, this will most likely break.

    # Tests mapping of PDB 2e32

    def setUp(self, ):
        self.family = 19187;
        self.protein = 1171456;
        self.domain  = 1307995;
        
        session = Session()
        self.family = session.query(Family).get(self.family)
        self.protein = session.query(Protein).get(self.protein)
        self.domain  = session.query(Domain).get(self.domain)

        self.pdbmap = AlignmentToPDBMapper(self.family, self.protein, self.domain, debug=True)

    def testPrintAlToPDBSeq(self, ):
        print "Alignment to PDB Seq:"
        for col, seq in self.pdbmap.alignment_pdbseq_map:
            print col, seq
        print "...Done"
    
    def testPrintPDBSeqToPDBAtom(self, ):
        print "PDB Seq to PDB Atom:"
        for seq, atom in self.pdbmap.pdbseq_pdbatom_map:
            print seq, atom
        print "...Done"

    def testPrintAlToPDBAtom(self, ):
        print "Alignment to PDB Atom:"
        for col, atom in self.pdbmap.alignment_pdbatom_map:
            print col, atom
        print "...Done"

    def testAlignmentToPDBMapper(self):
        print "Test mapping of certain values"
        #assert self.pdbmap.alignment_pdbatom_map[254] == 121, "Al Col 254 (site of +sel) should map to PDB atom record 121"
        assert self.pdbmap.alignment_pdbatom_map[255] == 122, "Al Col 255 (site of +sel) should map to PDB atom record 122"
        self.assertRaises(KeyError, self._al_atom_notinmap, )
        print "...Done"

    def _al_atom_notinmap(self, ):
        try:
            self.pdbmap.alignment_pdbatom_map[223]
        except:
            raise


if __name__ == "__main__":
    unittest.main()



